"use client"
import { useRouter } from 'next/navigation';
import { Button } from '../ui/button';
import { AlignCenter, AppWindow, Footprints } from 'lucide-react';
import { useState } from 'react';
import { jsPDF } from "jspdf";
import { profile } from 'console';

interface adminfeaturesProps {
  servers?: string[],
  challenges?: string[],
  users?: string[],
  name?: string
}

const AdminFeatures = ({
  servers,
  users,
  challenges,
  name,
}: adminfeaturesProps) => {

  const [isHovered, setIsHovered] = useState(false);
  const [isActive, setIsActive] = useState(false);

  const handleClick = () => {
    const doc = new jsPDF();

    var pageWidth = doc.internal.pageSize.width || doc.internal.pageSize.getWidth();
    var splitText = doc.splitTextToSize(servers ? servers.join(', ') : '', 150);
    var splitUser = doc.splitTextToSize(users ? users.join(', ') : '', 150);
    var splitChallenges = doc.splitTextToSize(challenges ? challenges.join(', ') : '', 100);

    // Top
    doc.setFontSize(30);
    doc.text("Brainwave", pageWidth / 2 + 10, 20, { align: 'center' });
    doc.addImage("https://utfs.io/f/fab438aa-8e7a-406a-9d1a-2ad9ddd349a0-1zbfv.png", 71, 8, 16, 16);
    doc.setDrawColor(128, 0, 128);
    doc.setLineWidth(1);
    doc.line(17, 28, 195, 28);
    doc.setFontSize(20);

    // Content
    doc.text("Platform Statistics", pageWidth / 2 + 5, 40, { align: 'center' })
    doc.addImage("https://utfs.io/f/bad46ecc-9383-467f-9bf3-c7ea693e0153-7mzaho.26.23.jpeg", 'JPEG', pageWidth / 2 - 87, pageWidth / 2 - 60, 180, 100);
    doc.setFontSize(14);
    doc.text("•	Teams :", 22, 165);

    var y = 165;

        if (servers && servers.length == 0) {
            doc.text("No Servers!!", 60, y);
        }
        else{
        for (var i = 0; i < splitText.length; i++) {
            if (y > 275) {
                y = 20;
                doc.addPage(); // Start a new page if content exceeds the height
            }
            doc.text(splitText[i], 60, y);
            y += 5; // Adjust vertical position
        }}

    doc.text("•	Challenges :", 22, 190);

    var y = 190;

        if (challenges && challenges.length == 0) {
            doc.text("No Challenges!!", 60, y);
        }
        else{
        for (var i = 0; i < splitChallenges.length; i++) {
            if (y > 275) {
                y = 20;
                doc.addPage(); // Start a new page if content exceeds the height
            }
            doc.text(splitChallenges[i], 70, y);
            y += 5; // Adjust vertical position
        }}

    doc.text("•	Users :", 22, 215);

    var y = 215;

        if (users && users.length == 0) {
            doc.text("No Users!!", 60, y);
        }
        else{
        for (var i = 0; i < splitUser.length; i++) {
            if (y > 275) {
                y = 20;
                doc.addPage(); // Start a new page if content exceeds the height
            }
            doc.text(splitUser[i], 60, y);
            y += 5; // Adjust vertical position
        }}


    // Bottom
    doc.text("Report Generated By : "+name,pageWidth/2 + 30,290);
    doc.line(17, pageWidth / 2 + 175, 195, pageWidth / 2 + 175);
    doc.save("Brainwave Platform Statistics.pdf");
  };

  const handleMouseEnter = () => {
    setIsHovered(true);
  };

  const handleMouseLeave = () => {
    setIsHovered(false);
    setIsActive(false);
  };

  const handleMouseDown = () => {
    setIsActive(true);
  };

  const buttonStyle = {
    border: '1px solid transparent',
    backgroundColor: isActive ? 'rgb(99, 103, 180)' : (isHovered ? 'rgb(99, 103, 180)' : 'transparent'),
    boxShadow: isHovered ? '0px 6px 15px rgba(0, 0, 0, 0.3)' : 'none', // Adjust this line
  };

  return (
    <div>
      <Button
        onClick={handleClick}
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        onMouseDown={handleMouseDown}
        className='text-white w-[155px]'
        style={buttonStyle}
      >
        <AppWindow className='pr-2' />
        {/* <Footprints className='pr-2'/> */}
        App Statistics
      </Button>
    </div>
  );
};

export default AdminFeatures;
